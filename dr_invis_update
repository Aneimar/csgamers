#include <amxmodx>
#include <engine>
#include <fakemeta>
#include <hamsandwich>

#define MAX_ENTITYS 900+15*32 // (900+15*SERVER_SLOTS) is the calculation cs uses but it can be bypassed by the "-num_edicts <x>"-parameter

new bool:g_bPlayerInvisible[33];

new g_iSpectatedId[33];

public plugin_init( )
{
	register_plugin( "Dr Invis", "2.0", "CsGamers" );
	
	register_clcmd( "say /invis", "menuInvisDisplay" );
	register_menucmd( register_menuid( "\r[ \dDR\r ] \yMeniu crestere FPS\w:^n^n" ), 1023, "menuInvisAction" );
	
	register_forward( FM_AddToFullPack, "fwdAddToFullPack_Post", 1 );
	RegisterHam( Ham_Spawn, "player", "hamSpawnPlayer_Post", 1 );
	
	register_event( "SpecHealth2", "eventSpecHealth2", "bd" );
}

public fwdAddToFullPack_Post( es_handle, e, ent, host, hostflags, player, pset )
{
	if( player && g_bPlayerInvisible[host] && host != ent && ent != g_iSpectatedId[host] && get_user_team(host) == get_user_team(ent) )
	{
		static const Float:corner[8][3] = 
		{
			{ -4096.0, -4096.0, -4096.0 },
			{ -4096.0, -4096.0, 4096.0 },
			{ -4096.0, 4096.0, -4096.0 },
			{ -4096.0, 4096.0, 4096.0 },
			{ 4096.0, -4096.0, -4096.0 },
			{ 4096.0, -4096.0, 4096.0 },
			{ 4096.0, 4096.0, -4096.0 },
			{ 4096.0, 4096.0, 4096.0 }
		};
		
		// rounded; distance from the map's center to the corners; sqrt( 4096^2 + 4096^2 + 4096^2 )
		static const Float:map_distance = 7094.480108;
		
		static Float:origin[3];
		get_es( es_handle, ES_Origin, origin );
		
		static i;
		while( get_distance_f( origin, corner[i] ) > map_distance )
		{ 
			if( ++i >= sizeof( corner ) )
			{
				// better to nullify the varibale now then doing it each time before the loop
				i = 0;
			}
		}
		
		set_es( es_handle, ES_Origin, corner[i] );
		set_es( es_handle, ES_Effects, get_es( es_handle, ES_Effects ) | EF_NODRAW );
	}

}

public hamSpawnPlayer_Post( id )
{
	g_iSpectatedId[id] = 0;
}

// thanks to xPaw who told me about this event
public eventSpecHealth2( id )
{
	g_iSpectatedId[id] = read_data( 2 );
}

public menuInvisDisplay( id )
{
	static menu[256];
	
	new len = formatex( menu, 255, "\r[ \dDR\r ] \yMeniu crestere FPS\w:^n^n" );
	
	len += formatex( menu[len], 255 - len, "\r1. \wJucatori: %s^n", g_bPlayerInvisible[id] ? "Invizibili" : "Vizibili" );
	
	len += formatex( menu[len], 255 - len, "^n\r0. \wIesire din meniu" );
	
	show_menu( id, ( 1<<0 | 1<<9 ), menu, -1 );
	
	return PLUGIN_HANDLED;
}

public menuInvisAction( id, key )
{
	switch( key )
	{
		case 0:
		{
			g_bPlayerInvisible[id] = !g_bPlayerInvisible[id];
			menuInvisDisplay( id );
		}
		case 9: show_menu( id, 0, "" );
	}
}

public client_connect( id )
{
	g_bPlayerInvisible[id] = false;
	g_iSpectatedId[id] = 0;
}
