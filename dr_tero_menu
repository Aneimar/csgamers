/* Sublime AMXX Editor v2.2 */

#include <amxmodx>
// #include <amxmisc>
#include <cstrike>
// #include <engine>
#include <fakemeta_util>
#include <hamsandwich>
// #include <fun>
// #include <xs>
// #include <sqlx>

#define PLUGIN  "Tero Menu"
#define VERSION "1.0.10"
#define AUTHOR  "CsGamers" 

const m_toggle_state = 41

new bool:FreeRound = false
#define TASK_MESAJ	12381

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)

	RegisterHam(Ham_Spawn, "player", "SpawnPlayer", 1) 
	RegisterHam(Ham_Use, "func_rot_button", "FwdHamUse_Button")
	RegisterHam(Ham_Use, "func_button", "FwdHamUse_Button")
	RegisterHam(Ham_Use, "button_target", "FwdHamUse_Button")

	register_event("HLTV", "NewRound", "a", "1=0", "2=0")
	register_event("CurWeapon", "CurWeapon", "be", "1=1", "2!29")
	// Add your code here...
}

public NewRound() {
	if(FreeRound) FreeRound = false
}


public FwdHamUse_Button( iEntity, id, iActivator, iUseType, Float:flValue ) { 
    if( FreeRound && iUseType == 2 && flValue == 1.0 && is_user_alive( id ) 
    &&  get_user_team( id ) == 1 && get_pdata_int( iEntity, m_toggle_state, 4 ) == 1 ) {   
        set_hudmessage( 0, 100, 255, -1.0, 0.25, 0, 2.0, 2.0, 0.2, 0.2, 3 ); 
        show_hudmessage( id, "^nNu poti declansa capcanele!" ); 
         
        return HAM_SUPERCEDE; 
    } 
     
    return HAM_IGNORED; 
} 

public SpawnPlayer(playerid) {
	
        if(!is_user_connected(playerid) || !is_user_alive(playerid) || cs_get_user_team(playerid) != CS_TEAM_T) return true

	fm_set_user_rendering(playerid)

	new Menu = menu_create("\yMeniu TERO\w", "TeroMenu_HAND")

	menu_additem(Menu, "\yFreeRun", "1")

	menu_display(playerid, Menu)
           

               
  }

public TeroMenu_HAND(playerid, Menu, Item) {

                     if(!is_user_connected(playerid) || !is_user_alive(playerid) || cs_get_user_team(playerid) != CS_TEAM_T) return true
	if(Item == MENU_EXIT) {
		menu_destroy(Menu)
		return true
	}
	
	new Data[14], Line[32]
	new Access, Callback
	menu_item_getinfo(Menu, Item, Access, Data, charsmax(Data), Line, charsmax(Line), Callback)
	
	new x = str_to_num(Data)

	switch(x) {
		case 1: {
			FreeRound = true
			set_task( 3.5, "FwdHamUse_Button" )
                                                     set_task(1.0, "arata_mesaj_permanent", TASK_MESAJ);
			chat_color(playerid, "!t Ai ales modul!g FreeRun!")

		}
	}

	menu_destroy(Menu)

	return true
}

stock chat_color(const id, const input[], any:...) {
    new count = 1, players[32]
    static msg[320]
    vformat(msg, 190, input, 3)
    replace_all(msg, 190, "!g", "^4")
    replace_all(msg, 190, "!n", "^1")
    replace_all(msg, 190, "!t", "^3")
    replace_all(msg, 190, "!t2", "^0")
    
    if(id)  players[0] = id;
    else get_players(players, count, "ch")
     
    for (new i = 0; i < count; i++) {
        if (is_user_connected(players[i])) {
            message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[i])
            write_byte(players[i])
            write_string(msg)
            message_end()
        }
    }
}

public arata_mesaj_permanent(taskid)
{
	set_hudmessage(0, 90, 0, 0.03, 0.28, 1, 3.0, 3.0, 2.0, 1.0, -1);
	show_hudmessage(0, "Runda Free!");
	
	if(FreeRound)
		set_task(1.0, "arata_mesaj_permanent", TASK_MESAJ);
}
