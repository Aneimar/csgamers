/* Plugin generated by AMXX-Studio */

#include <  amxmodx  >
#include <  amxmisc  >

#pragma tabsize 0;

#define PLUGIN   "Buy Admin"
#define VERSION     "0.1"
#define AUTHOR     ":troll:"

#define CHAT_PREFIX   "System" 

native fcs_get_user_credits(id)
native fcs_set_user_credits(id, points)

new Director [256], bool: SetPassword [33] = false, BuyAccess [33], Data [200], TimeRemaining, CheckTime [33] = 0,

HelperCosts, SlotCosts, BuyHelper [33], BuySlot [33];

public plugin_init (  ) 
{
	register_plugin ( PLUGIN, VERSION, AUTHOR )
	
	register_clcmd ( "say /buymenu", "cmdBuyMenu" );
	
	register_clcmd ( "register", "cmdPassword" );
	
	register_clcmd ( "say", "CheckSay" );
	
	register_clcmd ( "say_team", "CheckSay" );
	
	HelperCosts = register_cvar ( "amx_helper_costs", "5500" );
	
	SlotCosts = register_cvar ( "amx_slot_costs", "150" );
	
	TimeRemaining = register_cvar ( "amx_time_remaining", "30" );
}

public CheckSay ( id )
{
	static Args [192]; read_args ( Args, charsmax ( Args ) );
	
	static Command [192];
	
	if ( !Args [0] ) return PLUGIN_CONTINUE;
	
	remove_quotes ( Args [0] )
	
	if ( equal ( Args, "/register", strlen ( "/register" ) ) )
	{
		replace ( Args, charsmax ( Args ), "/", "" );
		formatex ( Command, charsmax ( Command ), "%s", Args );
		
		client_cmd ( id, Command );
	}
	
	return PLUGIN_HANDLED;
}

public cmdBuyMenu ( id )
{
	if ( SetPassword [id] )
	{
		ColorChat ( id, "!v[%s]!c Te afli in curs de inregistrare...", CHAT_PREFIX );
		
		return PLUGIN_HANDLED;
	}
	
	new Menu = menu_create ( "Buy Access Menu", "cmdSetFlags" );
	
	new CurrentCredits = fcs_get_user_credits ( id );
	
	formatex ( BuyHelper, charsmax ( BuyHelper ), "Buy V.I.P \r(%d Credit%s)", get_pcvar_num ( HelperCosts ), get_pcvar_num ( HelperCosts ) == 1 ? "" : "s" ); 
	
	formatex ( BuySlot, charsmax ( BuySlot ), "Buy SLOT \r(%d Credit%s)", get_pcvar_num ( SlotCosts ), get_pcvar_num ( SlotCosts ) == 1 ? "" : "s" ); 
	
	if ( CurrentCredits < get_pcvar_num ( HelperCosts ) || get_user_flags ( id ) & read_flags ( "tx" ) )
		menu_additem ( Menu, "\dBuy V.I.P \r(5500 CREDITE)", "1", 0 );
	else
		menu_additem ( Menu, BuyHelper, "1", 0 );
	
	if ( CurrentCredits < get_pcvar_num ( SlotCosts ) || get_user_flags ( id ) & read_flags ( "b" ) )
		menu_additem ( Menu, "\dBuy SLOT \r(150 CREDITE)", "2", 0 );
	else
		menu_additem ( Menu, BuySlot, "2", 0 );
	
	menu_setprop ( Menu, MPROP_EXIT, MEXIT_ALL );
	
	menu_display ( id, Menu, 0 );
	
	return PLUGIN_HANDLED;
}

public client_putinserver ( id )
{
	CheckTime [id] = 0
	
	SetPassword [id] = false;
}

public client_disconnect ( id ) SetPassword [id] = false;

public cmdSetFlags ( id, Menu, item )
{
	if ( !is_user_connected ( id ) ) return PLUGIN_HANDLED;
	
	if ( item == MENU_EXIT )
	{
		menu_destroy ( Menu );
		return PLUGIN_HANDLED;
	}
	
	new iData [6], iName [64];
	new access, callback;
	
	menu_item_getinfo ( Menu, item, access, iData,5, iName, 63, callback );
	
	new Key = str_to_num ( iData );
	
	new CurrentCredits = fcs_get_user_credits ( id );
	
	switch ( Key )
	{
		case 1:
		{
			if ( get_user_flags ( id ) & read_flags ( "tx" ) )
			{
				ColorChat ( id, "!v[%s]!c Ai deja V.I.P pe acest server !", CHAT_PREFIX );
				
				cmdBuyMenu ( id );
				
				return PLUGIN_HANDLED
			}
			
			if ( CurrentCredits < get_pcvar_num ( HelperCosts ) )
			{
				ColorChat ( id, "!v[%s]!c Nu ai suficiente credite pentru a cumpara V.I.P !", CHAT_PREFIX );
				
				cmdBuyMenu ( id );
				
				return PLUGIN_HANDLED;
			}
			else
			{
				// -------- | SlowHack | -------- //
				client_cmd ( id, "messagemode register" );
				
				CheckTime [id] = get_pcvar_num ( TimeRemaining );
				
				BuyAccess [id] = 1;
				
				TaskCheck ( id );
				
				SetPassword [id] = true;
				
			}
			return PLUGIN_HANDLED;
		}
		case 2:
		{
			if ( get_user_flags ( id ) & read_flags ( "b" ) )
			{
				ColorChat ( id, "!v[%s]!c Ai deja slot pe acest server !", CHAT_PREFIX );
				
				cmdBuyMenu ( id );
				
				return PLUGIN_HANDLED
			}
			
			if ( CurrentCredits < get_pcvar_num ( SlotCosts ) )
			{
				ColorChat ( id, "!v[%s]!c Nu ai suficiente credite pentru a cumpara SLOT !", CHAT_PREFIX );
				
				cmdBuyMenu ( id );
				
				return PLUGIN_HANDLED;
			}
			else
			{
				// -------- | SlowHack | -------- //
				client_cmd ( id, "messagemode register" );
				
				CheckTime [id] = get_pcvar_num ( TimeRemaining );
				
				BuyAccess [id] = 0;
				
				TaskCheck ( id );
				
				SetPassword [id] = true;
			}
		}
	}
	return PLUGIN_HANDLED;
}

public TaskCheck ( id )
{
	if ( !is_user_connected ( id ) )
		CheckTime [id] = 0;
	if ( CheckTime [id] > 1 )
	{
		CheckTime [id] --;
		
		if ( CheckTime [id] > 5 )
		{
			set_hudmessage ( 0, 255, 0, 0.05, 0.25, 0, 6.0, 1.0 )
			show_hudmessage ( id, "Ai la dispozite %i secunde sa introduci o parola !", CheckTime [id] );
			
		}
		else
		{
			set_hudmessage ( 255, 30, 0, 0.05, 0.25, 0, 6.0, 1.0 )
			show_hudmessage ( id, "Ai la dispozite %i secund%s sa introduci o parola !", CheckTime [id], CheckTime [id] == 1 ? "a" : "e" );
		}
		
		set_task ( 1.0, "TaskCheck", id );
	}
	else if ( CheckTime [id] <= 1 )
	{
		SetPassword [id] = false;
		
		set_hudmessage ( 255, 0, 0, 0.05, 0.25, 0, 6.0, 1.0 )
		show_hudmessage ( id, "Nu ai introdus parola, inregistrarea a esuat..." )			
		
		CheckTime [id] = 0;
	}	
}

public cmdPassword ( id )
{
	new Password [32]; read_argv ( 1, Password, charsmax ( Password ) );
	
	if ( read_argc (  ) < 2 )
	{
		ColorChat ( id, "!v[%s]!c Ussage:!v /register!c [!vPassword!c]", CHAT_PREFIX );
		
		return PLUGIN_HANDLED;
	}
	
	static Name [32]; get_user_name ( id, Name, charsmax ( Name ) );
	
	get_configsdir ( Director, charsmax ( Director ) );
	
	formatex ( Director, charsmax ( Director ), "%s/users.ini", Director );
	
	if ( BuyAccess [id] == 1 )
		formatex ( Data, charsmax ( Data ), "^"%s^" ^"%s^" ^"tx^" ^"a^" ; Acces cumparat", Name, Password );
	else
		formatex ( Data, charsmax ( Data ), "^"%s^" ^"%s^" ^"b^" ^"a^" ; Acces cumparat", Name, Password );
	
	if ( SetPassword [id] )
	{
		if ( Password [0] )
		{
			SetPassword [id] = false;
			
			remove_task ( id );
			
			CheckUsers ( id );
			
			write_file ( Director, Data );
			
			set_user_info ( id, "_pw", Password );
			
			set_task ( 2.0, "TaskReloadAdmins" );
			
			if ( BuyAccess [id] == 1 )
			{
				fcs_set_user_credits ( id, fcs_get_user_credits ( id ) - get_pcvar_num ( HelperCosts ) )
				ColorChat ( id, "!v[%s]!c Felicitari ! Ai cumparat!t V.I.P!c pe numele!v %s", CHAT_PREFIX, Name );
			}
			else
			{
				fcs_set_user_credits ( id, fcs_get_user_credits ( id ) - get_pcvar_num ( SlotCosts ) )
				ColorChat ( id, "!v[%s]!c Felicitari ! Ai cumparat!t SLOT!c pe numele!v %s", CHAT_PREFIX, Name );
			}
		}
		else
		{
			ColorChat ( id, "!v[%s]!c Parola invalida ...", CHAT_PREFIX );
			
			// --------|  SlowHack | -------- //
			client_cmd ( id, "messagemode register" );
			
			return PLUGIN_HANDLED;
		}
	}
	else
	{
		ColorChat ( id, "!v[%s]!c Momentan indisponibil...", CHAT_PREFIX );
		
		return PLUGIN_HANDLED;
	}
	return PLUGIN_HANDLED;
}

public TaskReloadAdmins (  ) server_cmd ( "amx_reloadadmins" );


// -------- | public by ConnorMcLeod | -------- //

public CheckUsers ( id )
{
	new FileName [64]; get_configsdir ( FileName, charsmax ( FileName ) );
	
	add ( FileName, charsmax ( FileName ), "/users.ini" );
	
	new File, Line;
	
	new Name [32]; get_user_name ( id, Name, charsmax ( Name ) );
	
	ReadFile:
	
	File = fopen ( FileName , "rt" );
	
	Line = -1;
	
	if ( File )
	{
		new Format [256], i, Key [32];
		while ( !feof ( File ) )
		{
			Line ++;
			
			fgets ( File, Format, charsmax ( Format ) );
			
			trim ( Format );
			
			i = Format [0];
			
			if ( i && i != '#' && i != ';' && !( i == '/' && Format [1] == '/' ) )
			{
				parse ( Format, Key, charsmax ( Key ) );
				
				if ( equal ( Key, Name ) )
				{
					fclose ( File );
					
					File = 0;
					
					write_file ( FileName, "", Line );
					
					goto ReadFile;
				}
			}
		}
		
		fclose ( File );
		
		File = 0;
	}
}
// -----------------------------------------------------------------------//

stock ColorChat(const id, const input[], any:...)
{
	new count = 1, players[32]
	static msg[320]
	vformat(msg, 190, input, 3)
	
	replace_all(msg, 190, "!v", "^4")
	replace_all(msg, 190, "!c", "^1")
	replace_all(msg, 190, "!t", "^3")
	replace_all(msg, 190, "!n", "^0")
	
	if (id) players[0] = id; else get_players(players, count, "ch")
{
	for (new i = 0; i < count; i++)
	{
		if (is_user_connected(players[i]) )
		{
			message_begin(MSG_ONE_UNRELIABLE, get_user_msgid ( "SayText" ), _, players [i] )
			write_byte(players[i])
			write_string(msg)
			message_end()
		}
	}
}
}
